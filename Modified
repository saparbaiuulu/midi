#SEA BATTLE

#importing libraries 
from os import system
import time
import random
import sys

# # == hitted
# x == not any ship
# o == not touched place

#VARIABLES
list_of_hitted = []
stat = []

#Functions
def clear(x):
    time.sleep(x)
    system("cls")

def exit():
    sys.exit()

def info():
    clear(0)
    print("# == hitted\nx == not any ship\no == not touched place")
    print("Columns given in numbers.\nRows given in letters.\n")
    print("Enter '0' to get back to menu")
    if int(input()) == 0:
        menu()

def check(row, column, list):
    if list[row][column] == 1:
        return 1
    else:
        return 0
    
def statistics():
    clear(0)
    for i in range(len(stat)):
        print(stat[i][0], "     ", print(stat[i][1]))
    print("\nEnter '0' to get back to menu")
    if int(input()) == 0:
        menu()

def change_for_hit(row, column, list):
    list[row][column] = "#"
    return list

def change_for_hit_for_game(row, column, list):
    list[row][column] = 0
    return list

def change_for_not_hit(x, y, list):
    list[x][y] = "x"
    return list

def sunk(row, column, list): 
    #for inside
    if (row > 0 and row < 6) and (column > 0 and column < 6):
        list[row+1][column+1] = "x"
        list[row-1][column-1] = "x"
        list[row+1][column-1] = "x"
        list[row-1][column+1] = "x"
        list[row][column+1] = "x"
        list[row][column-1] = "x"
        list[row+1][column] = "x"
        list[row-1][column] = "x"
    
    #for corners
    if row == 0 and column == 0:
        list[row+1][column+1] = "x"
        list[row][column+1] = "x"
        list[row+1][column] = "x"
    if row == 0 and column == 6:
        list[row+1][column-1] = "x"
        list[row][column-1] = "x"
        list[row+1][column] = "x"
    if row == 6 and column == 0:
        list[row-1][column+1] = "x"
        list[row-1][column] = "x"
        list[row][column+1] = "x"
    if row == 6 and column == 6:
        list[row-1][column-1] = "x"
        list[row-1][column] = "x"
        list[row][column-1] = "x"
    
    #for sides
    if (row == 0 and (column > 0 and column < 6)):
        list[row+1][column-1] = "x"
        list[row+1][column+1] = "x"
        list[row][column+1] = "x"
        list[row][column-1] = "x"
        list[row+1][column] = "x"
    if (row == 6 and (column > 0 and column < 6)):
        list[row-1][column-1] = "x"
        list[row-1][column+1] = "x"
        list[row][column+1] = "x"
        list[row][column-1] = "x"
        list[row-1][column] = "x"
    if (column == 0 and (row > 0 and row < 6)):
        list[row+1][column+1] = "x"
        list[row-1][column+1] = "x"
        list[row+1][column] = "x"
        list[row-1][column] = "x"
        list[row][column+1] = "x"
    if (column == 6 and (row > 0 and row < 6)):
        list[row+1][column-1] = "x"
        list[row-1][column-1] = "x"
        list[row-1][column] = "x"
        list[row+1][column] = "x"
        list[row][column-1] = "x"
    return list

def not_sunk(row, column, list):
    #for inside
    if (row > 0 and row < 6) and (column > 0 and column < 6):
        list[row+1][column+1] = "x"
        list[row-1][column-1] = "x"
        list[row+1][column-1] = "x"
        list[row-1][column+1] = "x"   
    
    #for corners
    if row == 0 and column == 0:
        list[row+1][column+1] = "x"
    if row == 0 and column == 6:
        list[row+1][column-1] = "x"
    if row == 6 and column == 0:
        list[row-1][column+1] = "x"
    if row == 6 and column == 6:
        list[row-1][column-1] = "x"
    
    #for sides
    if (row == 0 and (column > 0 and column < 6)):
        list[row+1][column-1] = "x"
        list[row+1][column+1] = "x"
    if (row == 6 and (column > 0 and column < 6)):
        list[row-1][column-1] = "x"
        list[row-1][column+1] = "x"
    if (column == 0 and (row > 0 and row < 6)):
        list[row+1][column+1] = "x"
        list[row-1][column+1] = "x"
    if (column == 6 and (row > 0 and row < 6)):
        list[row+1][column-1] = "x"
        list[row-1][column-1] = "x"
    return list


def checknear(row, column, list):
